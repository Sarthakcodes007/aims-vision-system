version: '3.8'

services:
  aims-api:
    build: .
    container_name: aims-api
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - MODEL_CACHE_DIR=/app/models
    volumes:
      - ./models:/app/models:ro
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    networks:
      - aims-network

  aims-streamlit:
    build: .
    container_name: aims-streamlit
    command: ["python", "app.py"]
    ports:
      - "8501:8501"
    environment:
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
    volumes:
      - ./models:/app/models:ro
      - ./uploads:/app/uploads
    depends_on:
      aims-api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - aims-network

  nginx:
    image: nginx:alpine
    container_name: aims-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - .:/usr/share/nginx/html:ro
    depends_on:
      - aims-api
      - aims-streamlit
    restart: unless-stopped
    networks:
      - aims-network

  redis:
    image: redis:7-alpine
    container_name: aims-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - aims-network

volumes:
  redis-data:
    driver: local

networks:
  aims-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Usage:
# docker-compose up -d                 # Start all services
# docker-compose up aims-api           # Start only API service
# docker-compose logs -f aims-api      # View API logs
# docker-compose down                  # Stop all services
# docker-compose down -v              # Stop and remove volumes

# For GPU support, add to aims-api service:
# deploy:
#   resources:
#     reservations:
#       devices:
#         - driver: nvidia
#           count: 1
#           capabilities: [gpu]